version: "3.9"

services:
  app:
    build: .
    ports:
      - 8081:8081
    environment:
      - PORT=8081
      - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://otel-collector:4317
      - OTEL_RESOURCE_ATTRIBUTES=service.name=app
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
      - OTEL_SERVICE_NAME=app

  tracetest:
    image: kubeshop/tracetest:latest
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./tracetest/config.yaml:/app/config.yaml
    ports:
      - 8080:8080
    depends_on:
      postgres:
        condition: service_healthy
      jaeger:
        condition: service_healthy
      otel-collector:
        condition: service_started

  postgres:
    image: postgres
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    ports:
      - 5432:5432
    healthcheck:
      test: pg_isready -U "$$POSTGRES_USER" -d "$$POSTGRES_DB"
      interval: 1s
      timeout: 5s
      retries: 60

  otel-collector:
    image: otel/opentelemetry-collector:0.54.0
    ports:
      - "55679:55679"
      - "4317:4317"
      - "8888:8888"
    command:
      - "--config"
      - "/otel-local-config.yaml"
    volumes:
      - ./tracetest/collector.yaml:/otel-local-config.yaml
    environment:
      - JAEGER_ENDPOINT=jaeger:14250
    depends_on:
      jaeger:
        condition: service_healthy

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778
      - 4317
      - 4318:4318
      - 16685:16685
      - 16686:16686
      - 14268:14268
    healthcheck:
      test: ["CMD", "wget", "--spider", "localhost:16686"]
      interval: 1s
      timeout: 3s
      retries: 60
